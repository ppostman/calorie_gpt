openapi: 3.1.0
info:
  title: Calorie GPT API
  description: |
    API for tracking daily calorie intake, nutrition, and weight management.
    Features include:
    - Daily calorie limit management
    - Nutrition entry tracking
    - Weight tracking and monitoring
    - Calorie calculations and remaining calorie tracking

    Authentication:
    All endpoints require an API key to be sent in the X-API-Key header.
  version: 1.0.0

servers:
  - url: https://calorie-gpt.onrender.com
    description: Production server
  - url: http://localhost:8080
    description: Local development server

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication. Must be included in all requests.

  schemas:
    DailyCalorieLimitInput:
      type: object
      required:
        - date
        - base_calories
      properties:
        date:
          type: string
          format: date
          example: "2025-02-16"
        base_calories:
          type: number
          format: float
          description: Daily base calorie limit
          example: 2000
        workout_calories:
          type: number
          format: float
          description: Additional calories from workouts
          example: 300

    DailyCalorieLimit:
      allOf:
        - $ref: '#/components/schemas/DailyCalorieLimitInput'
        - type: object
          properties:
            id:
              type: integer
              example: 1
            created_at:
              type: string
              format: date-time
              example: "2025-02-16T10:30:00Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-02-16T10:30:00Z"

    NutritionEntryInput:
      type: object
      required:
        - date
        - food
        - calories
      properties:
        date:
          type: string
          format: date
          example: "2025-02-16"
        food:
          type: string
          description: Name of the food item
          example: "Chicken Salad"
        calories:
          type: number
          format: float
          description: Calories in the food item
          example: 350
        protein:
          type: number
          format: float
          description: Protein content in grams
          example: 25
        carbs:
          type: number
          format: float
          description: Carbohydrate content in grams
          example: 15
        fat:
          type: number
          format: float
          description: Fat content in grams
          example: 20
        description:
          type: string
          description: Additional details about the food item
          example: "Grilled chicken breast with mixed greens"

    NutritionEntry:
      allOf:
        - $ref: '#/components/schemas/NutritionEntryInput'
        - type: object
          properties:
            id:
              type: integer
              example: 1
            created_at:
              type: string
              format: date-time
              example: "2025-02-16T10:30:00Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-02-16T10:30:00Z"

    CalorieCalculation:
      type: object
      properties:
        date:
          type: string
          format: date
          example: "2025-02-16"
        base_calories:
          type: number
          format: float
          example: 2000
        workout_calories:
          type: number
          format: float
          example: 300
        consumed_calories:
          type: number
          format: float
          example: 1200
        remaining_calories:
          type: number
          format: float
          example: 1100
        entries:
          type: array
          items:
            $ref: '#/components/schemas/NutritionEntry'

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Entry not found"

    WeightInput:
      type: object
      required:
        - date
        - weight
      properties:
        date:
          type: string
          format: date
          example: "2025-02-16"
        weight:
          type: number
          format: float
          description: Weight in kilograms
          example: 75.5
        notes:
          type: string
          description: Additional notes about the weight record
          example: "After morning workout"

    Weight:
      allOf:
        - $ref: '#/components/schemas/WeightInput'
        - type: object
          properties:
            id:
              type: integer
              example: 1
            created_at:
              type: string
              format: date-time
              example: "2025-02-16T10:30:00Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-02-16T10:30:00Z"

paths:
  /daily-limits:
    post:
      operationId: createDailyLimit
      summary: Create or update a daily calorie limit
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyCalorieLimitInput'
      responses:
        '201':
          description: Daily limit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyCalorieLimit'
        '200':
          description: Daily limit updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyCalorieLimit'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /daily-limits/{date}:
    get:
      operationId: getDailyLimit
      summary: Get daily calorie limit for a specific date
      security:
        - ApiKeyAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date in YYYY-MM-DD format
          example: "2025-02-16"
      responses:
        '200':
          description: Daily limit found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyCalorieLimit'
        '404':
          description: Daily limit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entries:
    post:
      operationId: createEntry
      summary: Create a new nutrition entry
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionEntryInput'
      responses:
        '201':
          description: Entry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionEntry'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      operationId: getAllEntries
      summary: Get all nutrition entries
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: List of nutrition entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NutritionEntry'

  /entries/{id}:
    get:
      operationId: getEntry
      summary: Get a specific nutrition entry
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Entry ID
      responses:
        '200':
          description: Nutrition entry found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionEntry'
        '404':
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      operationId: updateEntry
      summary: Update a nutrition entry
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Entry ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionEntryInput'
      responses:
        '200':
          description: Entry updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionEntry'
        '404':
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      operationId: deleteEntry
      summary: Delete a nutrition entry
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Entry ID
      responses:
        '200':
          description: Entry deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Entry deleted successfully
        '404':
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entries/date/{date}:
    get:
      operationId: getEntriesByDate
      summary: Get entries for a specific date
      security:
        - ApiKeyAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date in YYYY-MM-DD format
          example: "2025-02-16"
      responses:
        '200':
          description: List of nutrition entries for the date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NutritionEntry'

  /calories/{date}:
    get:
      operationId: getDailyCalories
      summary: Get calorie calculations for a specific date
      security:
        - ApiKeyAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date in YYYY-MM-DD format
          example: "2025-02-16"
      responses:
        '200':
          description: Calorie calculations including remaining calories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalorieCalculation'
        '404':
          description: Daily limit not found for the date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /weights:
    get:
      operationId: getWeights
      summary: Get all weight records for the authenticated user
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: List of weight records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: createWeight
      summary: Create a new weight record
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightInput'
      responses:
        '201':
          description: Weight record created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weight'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /weights/{id}:
    get:
      operationId: getWeight
      summary: Get a specific weight record
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Weight record ID
      responses:
        '200':
          description: Weight record found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weight'
        '404':
          description: Weight record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      operationId: updateWeight
      summary: Update a weight record
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Weight record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeightInput'
      responses:
        '200':
          description: Weight record updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weight'
        '404':
          description: Weight record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      operationId: deleteWeight
      summary: Delete a weight record
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Weight record ID
      responses:
        '200':
          description: Weight record deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weight record deleted successfully
        '404':
          description: Weight record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /weights/date/{date}:
    get:
      operationId: getWeightsByDate
      summary: Get weight records for a specific date
      security:
        - ApiKeyAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date in YYYY-MM-DD format
          example: "2025-02-16"
      responses:
        '200':
          description: List of weight records for the date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
